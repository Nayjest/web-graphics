// Generated by CoffeeScript 1.3.3

/*
Abstract viewport class
Viewport is root layer in any scene
*/


(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['components/graphics/lib/layers/dom/AbstractDomLayer'], function(AbstractDomLayer) {
    var Viewport;
    return Viewport = (function(_super) {

      __extends(Viewport, _super);

      Viewport["default"] = null;

      Viewport.getDefault = function() {
        var _ref;
        return (_ref = this["default"]) != null ? _ref : this["default"] = new this;
      };

      function Viewport(config) {
        var $body, defaults, _base, _ref;
        if (config == null) {
          config = {};
        }
        if ((_ref = (_base = this.constructor)["default"]) == null) {
          _base["default"] = this;
        }
        $body = $('body');
        defaults = {
          size: {
            x: $body.width(),
            y: $body.height()
          },
          $parentEl: $body
        };
        Viewport.__super__.constructor.call(this, _.defaults(config, defaults));
        this.$el.css({
          overflow: 'hidden'
        });
      }

      Viewport.prototype.clear = function() {
        return this;
      };

      return Viewport;

    })(AbstractDomLayer);
  });

}).call(this);
