// Generated by CoffeeScript 1.6.2
/*
Module DomLayer
@author Vitalii [Nayjest] Stepanenko <gmail@vitaliy.in>
*/


(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['components/graphics/lib/layers/AbstractLayer', 'components/Vector2D/Vector2D', "components/jquery/jquery", "components/underscore/underscore"], function(AbstractLayer, Vector2D) {
    "use strict";
    var AbstractDomLayer, defaults, _radInDeg;

    _radInDeg = Math.PI / 180;
    defaults = {
      getCss: function() {
        return {
          position: 'absolute',
          padding: 0,
          margin: 0,
          top: 0,
          left: 0
        };
      },
      tag: 'div',
      get$el: function() {
        return $("<" + this.tag + "/>");
      },
      getAttr: function() {
        return {};
      }
    };
    return AbstractDomLayer = (function(_super) {
      __extends(AbstractDomLayer, _super);

      /*
      @option config {Object|null} css DOM Element css
      @option config {Object|null} attr DOM Element attributes
      @option config {Object|null} $el DOM Element wrapped to jQuery object
      @option config {DomElement|jQuery|selector|null} domContainer
      */


      function AbstractDomLayer(config) {
        this._createDomElement(config);
        AbstractDomLayer.__super__.constructor.call(this, config);
      }

      AbstractDomLayer.prototype._createDomElement = function(config) {
        if (config == null) {
          config = {};
        }
        this.$el = config.$el || defaults.get$el();
        if (config.$parentEl) {
          this.setParentEl(config.$parentEl);
        }
        this.$el.css(_.defaults({}, config.css, defaults.getCss()));
        this.$el.attr(_.defaults({}, config.attr, defaults.getAttr()));
        return this.$el.get(0).layer = this;
      };

      /*
      Shows layer
      */


      AbstractDomLayer.prototype.show = function() {
        this.$el.show();
        return AbstractDomLayer.__super__.show.call(this);
      };

      AbstractDomLayer.prototype.hide = function() {
        this.$el.hide();
        return AbstractDomLayer.__super__.hide.call(this);
      };

      AbstractDomLayer.prototype._getNonDomLayersOffset = function() {
        var layer, pos, _i, _len, _ref;

        pos = new Vector2D();
        _ref = this.getParents();
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          layer = _ref[_i];
          if (layer instanceof AbstractDomLayer) {
            break;
          }
          pos.add(layer.pos);
        }
        return pos;
      };

      AbstractDomLayer.prototype._calcDomOffset = function() {
        var a, d, domParentSize, innerTopRightPos, nonDomOffset, parentOffset, res, size, zoom;

        parentOffset = this.$parentEl.offset();
        parentOffset = new Vector2D(parentOffset.left, parentOffset.top);
        zoom = this.getAbsoluteZoom();
        size = this.size.clone().multiplyScalar(zoom);
        domParentSize = new Vector2D(this.$parentEl.width(), this.$parentEl.height());
        innerTopRightPos = domParentSize.substract(size).multiplyScalar(0.5);
        if (this.angle) {
          d = size.magnitude();
          a = Math.PI / 2 - this.angleRad % Math.PI / 2;
          innerTopRightPos.add({
            x: (size.x - d * Math.cos(Math.asin(size.y / d) - a)) / 2,
            y: (size.y - d * Math.sin(a + Math.acos(size.x / d))) / 2
          });
        }
        nonDomOffset = this._getNonDomLayersOffset();
        res = parentOffset.add(innerTopRightPos).add(this.pos.clone().multiplyScalar(zoom)).add(nonDomOffset);
        return {
          left: res.x,
          top: res.y
        };
      };

      AbstractDomLayer.prototype.redraw = function() {
        var val;

        val = "rotate(" + this.angle + "deg)";
        this.$el.offset(this._calcDomOffset()).width(this.size.x * this.zoom).height(this.size.y * this.zoom).css({
          "-moz-transform": val,
          "-webkit-transform": val,
          "-o-transform": val,
          transform: val
        });
        return AbstractDomLayer.__super__.redraw.call(this);
      };

      AbstractDomLayer.prototype.setParentEl = function($parentEl) {
        this.$parentEl = $($parentEl);
        return this.$el.appendTo(this.$parentEl);
      };

      AbstractDomLayer.prototype.setParent = function(parent) {
        AbstractDomLayer.__super__.setParent.call(this, parent);
        if (parent instanceof AbstractDomLayer) {
          this.setParentEl(parent.$el);
        } else {
          if (!this.$parentEl) {
            this.setParentEl($('body'));
          }
        }
        return this;
      };

      AbstractDomLayer.prototype.destructor = function() {
        this.$el.detach();
        return AbstractDomLayer.__super__.destructor.call(this);
      };

      AbstractDomLayer.prototype.getScreenPos = function() {
        var offset;

        offset = this.$el.offset();
        return new Vector2D(offset.left - window.pageXOffset, offset.top - window.pageYOffset);
      };

      AbstractDomLayer.prototype.getCenterScreenPos = function() {
        return this.getScreenPos().add(this.size.clone().multiplyScalar(0.5));
      };

      return AbstractDomLayer;

    })(AbstractLayer);
  });

}).call(this);
